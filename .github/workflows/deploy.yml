name: CI/CD LDAP Infraestructura

on:
  workflow_dispatch:

jobs:
  despliegue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Inicializar Terraform
        run: terraform init

      - name: Plan de Terraform
        run: terraform plan

      - name: Aplicar Terraform
        run: terraform apply -auto-approve

      - name: Crear clave privada claveuno.pem
        run: |
          echo "${{ secrets.EC2_SSH_KEY_CLAVEUNO }}" > claveuno.pem
          chmod 600 claveuno.pem

      - name: Crear clave privada clavedos.pem
        run: |
          echo "${{ secrets.EC2_SSH_KEY_CLAVEDOS }}" > clavedos.pem
          chmod 600 clavedos.pem

      - name: Subir archivos .cer al servidor web
        run: |
          scp -o StrictHostKeyChecking=no -i claveuno.pem miapp-docker/*.cer ec2-user@${{ secrets.ELASTIC_IP }}:/tmp/

      - name: Subir archivos .key al servidor web
        run: |
          scp -o StrictHostKeyChecking=no -i claveuno.pem miapp-docker/*.key ec2-user@${{ secrets.ELASTIC_IP }}:/tmp/

      - name: Subir clavedos.pem a la instancia
        run: |
          scp -o StrictHostKeyChecking=no -i claveuno.pem clavedos.pem ec2-user@${{ secrets.ELASTIC_IP }}:/home/ec2-user/

      - name: Configurar SSL en Apache en la instancia
        run: |
          ssh -o StrictHostKeyChecking=no -i claveuno.pem ec2-user@${{ secrets.ELASTIC_IP }} << 'EOF'
            sudo mkdir -p /etc/ssl/andres/
            sudo mv /tmp/*.cer /etc/ssl/andres/
            sudo mv /tmp/*.key /etc/ssl/andres/
            
          EOF

      # -----  Transferir y ejecutar en LDAP -----

      - name: Subir carpeta ldap-setup al servidor web
        run: |
          scp -i claveuno.pem -o StrictHostKeyChecking=no -r ldap-setup ec2-user@${{ secrets.ELASTIC_IP }}:/home/ec2-user/

      - name: Transferir carpeta desde servidor web a LDAP
        run: |
          ssh -i claveuno.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.ELASTIC_IP }} << EOF
            scp -o StrictHostKeyChecking=no -i /home/ec2-user/claveuno.pem -r /home/ec2-user/ldap-setup ec2-user@${{ needs.despliegue.outputs.instance_private_ip_ldap }}:/home/ec2-user/
          EOF

      - name: Configurar SSH en el Bastión
        run: |
          ssh -i claveuno.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.ELASTIC_IP }} \
            "mkdir -p ~/.ssh && cp /home/ec2-user/claveuno.pem ~/.ssh/ && chmod 600 ~/.ssh/claveuno.pem"   

      - name: Crear archivo SSH config en la instancia del Bastión
        run: |
          ssh -i claveuno.pem ec2-user@${{ secrets.ELASTIC_IP }} << EOF
            mkdir -p ~/.ssh
            echo "Host ldap-instance" > ~/.ssh/config
            echo "  HostName ${{ needs.despliegue.outputs.instance_private_ip_ldap }}" >> ~/.ssh/config
            echo "  User ec2-user" >> ~/.ssh/config
            echo "  IdentityFile ~/.ssh/claveuno.pem" >> ~/.ssh/config
            echo "  ProxyCommand ssh -i ~/.ssh/claveuno.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.ELASTIC_IP }} -W %h:%p" >> ~/.ssh/config
            chmod 600 ~/.ssh/config
          EOF

      - name: Ejecutar script en la instancia LDAP
        run: |
          ssh -i claveuno.pem ec2-user@${{ secrets.ELASTIC_IP }} << EOF
            ssh ldap-instance "sudo chmod +x /home/ec2-user/ldap-setup/ec2.sh && sudo /home/ec2-user/ldap-setup/ec2.sh && sudo docker exec ldap-container bash -c 'chmod +x add-ldif.sh' && sudo docker exec ldap-container bash './add-ldif.sh'"
          EOF

      - name: Borrar archivo private key
        run: |
          rm -f claveuno.pem

